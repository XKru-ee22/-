#include <iostream>

#include <ctime>

#include <iomanip>

#include <string>

using namespace std;

struct Data {

	int day;

	int month;

	int year;

	void FillData(int min, int max)
	{
		day = 1 + rand() % 31;
		month = 1 + rand() % 12;
		year = min + (rand() % (max - min));
	}

};

struct Student {

	string FirstName;

	string LastName;

	Data data;

	float Avg;

	int marks[10];

	string Status = "Vidminnyk";

	string Pilga = "Pilga";

	void Fill() {

		string n[6] = { "Olexiy","Olexandr","Maksym","Vladislav","Yuriy","Bogdan" };

		string sn[6] = { "Bondarenko","Melnik","Shevchenko","Tkachenko","Kovalenko","Boyko" };

		int a, b, c;

		a = rand() % 5;

		b = rand() % 5;

		c = rand() % 5;

		FirstName = n[a];

		LastName = sn[b];

		bool vidminnyk;

		bool privilegia;

		if (c == 0) {
		
			vidminnyk = true;

			Status = "Vidminnyk";

			for (int i = 0; i < 10; i++) {
			
				marks[i] = 10 + rand() % (12 - 10);
			
			}
		
		}

		else {
		
			for (int i = 0; i < 10; i++) {
			
				marks[i] = 1 + rand() % 12;
			
			}
		
		}
		
		int sum=0;

		for (int i = 0; i < 10; i++) {
		
			sum += marks[i];
		
		}

		Avg = sum / 10.0;

		privilegia = rand() % 2;

		data.FillData(1999, 2020);

	}

	void FillRandMarks() {

		for (int i = 0; i < 10; i++) {

				marks[i] = 1 + rand() % 12;

				cout << marks[i];

		}

	}

	void PrintMarks() {

		for (int i = 0; i < 10; i++) {

			cout << marks[i] << endl;

		}

	}

	void FillRandName() {

		string n[6] = { "Olexiy","Olexandr","Maksym","Vladislav","Yuriy","Bogdan" };

		string sn[6] = { "Bondarenko","Melnik","Shevchenko","Tkachenko","Kovalenko","Boyko" };

		int RandLastName = rand() % 5, RandFirstName = rand() % 5;

		LastName = n[RandLastName];

		FirstName = sn[RandFirstName];

	}

	void FillRandVidmin() {

		for (int i = 0; 1 < 10; i++) {

			marks[i] = 10 + rand() % (12 - 10);

			cout << marks[i];

		}

	}

	void Print() {
		
		cout << "Name\tSurname\tDay,month,year" << endl;

		cout << FirstName << "\t" << LastName << "\t" << data.day << "." << data.month << "." << data.year << endl;
		
		PrintMarks();

	}

};

struct Teacher {

	string FirstName;

	string LastName;

	Data data;

	void Fill() {

		string n[6] = { "Olexiy","Olexandr","Maksym","Vladislav","Yuriy","Bogdan" };

		string sn[6] = { "Bondarenko","Melnik","Shevchenko","Tkachenko","Kovalenko","Boyko" };

		int a, b, c;

		a = rand() % 5;

		b = rand() % 5;

		FirstName = n[a];

		LastName = sn[b];

		data.FillData(1980, 2020);

	}

		void FillRandName() {

			string n[6] = { "Olexiy","Olexandr","Maksym","Vladislav","Yuriy","Bogdan" };

			string sn[6] = { "Bondarenko","Melnik","Shevchenko","Tkachenko","Kovalenko","Boyko" };

			int RandLastName = rand() % 5, RandFirstName = rand() % 5;

			LastName = n[RandLastName];

			FirstName = sn[RandFirstName];

		}
	
		void Print() {

			cout << "Name\tSurname\tDay,month,year" << endl;

			cout << FirstName << "\t" << LastName << "\t" << data.day << "." << data.month << "." << data.year << endl;

		}

	

};

struct Group {

	Teacher teacher;

	Student* student = new Student[5];

	string name;

	string Name;

	float Avg;

	int count = 0;

	void Fill(string name){
	
		Name = name;

		teacher.Fill();

		for (int i = 0; i < 5; i++) {
		
			student[i].Fill();
		
		}
        
		int sum = 0;
		
		for (int i = 0; i < 5; i++) {
			
				sum += student[i].Avg;

			

		}

		Avg = sum / 5.0;

	}

	void Print() {
	
		cout << "Group name:" << Name << endl;

		cout << endl;

		cout << "Teacher:" << endl;

		teacher.Print();

		cout << endl;

		cout << "Students:\t" << endl;

		for (int i = 0; i < 5; i++) {

			student[i].Print();

		}

		cout << endl;

	}

	

};

void BirthdayInOneDay(Group* groups) {

	Student* arr1 = new Student[15]; for (int i = 0, s = 0; i < 3; i++) { for (int j = 0; j < 5; j++, s++) { arr1[s] = groups[i].student[j]; } } for (int i = 0; i < 15; i++) { arr1[i].Print(); cout << endl; }
	cout << "BORN IN ONE DAY:" << endl;
	int x = 0;
	for (int i = 0; i < 15; i++)
	{
		for (int j = i + 1; j < 15; j++)
		{
			if (arr1[i].data.day == arr1[j].data.day && arr1[i].data.month == arr1[j].data.month && arr1[i].data.year == arr1[j].data.year)
			{
				arr1[i].Print();
				cout << endl;
				arr1[i].Print();
				x++;
			}
		}
	}
	if (x == 0)
	{
		cout << "No one bird in one day" << endl;
	}

}

void Seredne(Group* groups) {

	int index = 0;

	int a = 0;

	for (int i = 0; i < 3;i++) {
	
		for (int j = 0; j < 3; j++) {
		
			if (groups[i].student[j].Avg > 8.5) {
			
				groups[i].student[j];

				index = i;

				a++;
			
			}
		
		}
	
	}

	cout <<"Kill. studentiv u yakih bilshe 8.5:"<< a << endl;

}

void Pillg(Group* groups) {

	int index = 0;

	int a = 0;

	int max = 0;

	for (int i = 0; i < 3; i++) {

		for (int j = 0; j < 3; j++) {

			if (groups[i].student[j].Pilga == "Pilga") {

				groups[i].count++;

			}

		}

	}

	for (int i = 0; i < 0; i++) {

		if (max < groups[i].count) {
		
			index = i;

			max = groups[i].count;

		}

	}

	cout << groups[index].Name << endl;

}

void Vidmin(Group *groups) {

	cout << "Studenty vidminniki:" << endl << endl;

	for (int i = 0; i < 3; i++) {
	
		for (int j = 0; j < 5; j++) {
		
			if (groups[i].student[j].Status == "Vidminnyk") {
			
				cout << "Group name: \n";

				cout<<groups[i].Name<<endl;

				groups[i].student[j].Print();

				cout << endl;
			
			}
		
		}
	
	}

}

void GroupUsp1(Group* groups) {

	float min = groups[0].Avg;

	int grup = 0;

	cout << "Kerivnik naicrascoho klasu:" << endl << endl;

	for (int i = 0; i < 3; i++) {

		if (min > groups[i].Avg) {

			min = groups[i].Avg;

			grup = i;

		}

	}

	Teacher Print();

}

void GroupUsp(Group* groups) {

	float min = groups[0].Avg;

	int grup = 0;

	cout << "Naihirshiy klass:" << endl << endl;

	for (int i = 0; i < 3; i++) {
	
		if (min> groups[i].Avg) {
		
			min=groups[i].Avg;

			grup=i;
		
		}
	
	}

	groups[grup].Print();

}

void Birthday(Group* groups) {

	int year = groups[0].student[0].data.year;
	int month = groups[0].student[0].data.month;
	int day = groups[0].student[0].data.day;
	int res;
	res = day + month * 30 + (2020 - year) * 360;
	int res2;
	int indexi = 0;
	int indexj = 0;
	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 5; j++)
		{
			year = groups[i].student[j].data.year;
			month = groups[i].student[j].data.month;
			day = groups[i].student[j].data.day;
			year = (2020 - year) * 360;
			month = month * 30;
			res2 = day + month + year;
			if (res < res2)
			{
				res = res2;
				indexi = i;
				indexj = j;
			}
		}
	}
	groups[indexi].student[indexj].Print();
}

int main(){

	srand(time(0));

	string name[3] = {"BV021","BV022","1711"};

	Group groups[3];

	for (int i = 0; i < 3; i++) {
	
		groups[i].Fill(name[i]);

		groups[i].Print();
        
		
		
	}

		/*Vidmin(groups);

		cout << endl;

		GroupUsp1(groups);

		cout << endl;

		GroupUsp(groups);

		cout << endl;

		cout<<"BDay in one day:"<<endl;

        BirthdayInOneDay(groups);

		cout << endl;*/

		Pillg(groups);

		cout << endl;

}
